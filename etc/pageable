package com.hae.approval.box.online.service.query;

import com.hae.approval.box.common.dto.query.in.ProceedDocumentQueryInDto;
import com.hae.approval.box.common.dto.query.out.ProceedDocumentBoxQueryOutDto;
import com.hae.approval.box.common.repository.v1.custom.ProceedDocumentBoxRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import java.util.List;
@Service
@Slf4j
@RequiredArgsConstructor
public class ProceedDocumentBoxQueryServiceImpl implements ProceedDocumentBoxQueryService{
    private final ProceedDocumentBoxRepository proceedDocumentBoxRepository;

    @Override
    public List<ProceedDocumentBoxQueryOutDto> findProceedDocumentBox(ProceedDocumentQueryInDto inDto) {
        String sort;
        Integer page;
        Integer size;
        Pageable pageable = null;
        return proceedDocumentBoxRepository.findProceedDocumentBox(inDto.getCompanyCode(), inDto.getUserId(), pageable);
    }
}


@Service
@Slf4j
@RequiredArgsConstructor
public class ProceedDocumentBoxQueryServiceImpl implements ProceedDocumentBoxQueryService {

    private final ProceedDocumentBoxRepository proceedDocumentBoxRepository;

    @Override
    public List<ProceedDocumentBoxQueryOutDto> findProceedDocumentBox(ProceedDocumentQueryInDto inDto) {
        // 예를 들어, sort, page, size를 inDto에서 가져온다고 가정
        String sort = inDto.getSort();
        Integer page = inDto.getPage();
        Integer size = inDto.getSize();

        Pageable pageable = PageRequest.of(page, size); // PageRequest를 사용하여 Pageable 객체 생성

        return proceedDocumentBoxRepository.findProceedDocumentBox(inDto.getCompanyCode(), inDto.getUserId(), pageable);
    }
}
