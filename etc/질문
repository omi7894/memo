List<ApprovalShareReaderView> deleteList = approvalShareReaderViewRepository.findByApprovalShareReaderViewIdInAndUseYn(approvalShareReaderViewIdList, YesNo.Y);
        if(approvalShareReaderViewIdList.size() != deleteList.size()){
            throw new NotFoundException("ApprovalShareReaderView");
        }


public class ApprovalShareReaderView extends BaseEntity implements Persistable<String> {

    @Id
    @Column(name = "APPROVAL_SHARE_READER_VIEW_ID")
    @Builder.Default
    private String approvalShareReaderViewId = CommonUtils.getUUID();
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "APPROVAL_SHARE_ID")
    private ApprovalShare approvalShare;
    
    @Column(name = "READER_ORDER_NO")
    private int readerOrderNo;
    
    @Enumerated(EnumType.STRING)
    @Column(name = "READ_YN")
    @Builder.Default
    private YesNo readYn = YesNo.N;
    
    @Column(name = "SHARE_DATETIME")
    @Convert(converter = LocalDateTimeConverter.class)
    private LocalDateTime shareDatetime;

    @Column(name = "READ_DATETIME")
    @Convert(converter = LocalDateTimeConverter.class)
    private LocalDateTime readDatetime;

    @Enumerated(EnumType.STRING)
    @Column(name = "APPROVAL_SHARE_TYPE_CODE")
    private ApprovalShareType approvalShareTypeCode;

    @Enumerated(EnumType.STRING)
    @Column(name = "APPROVAL_SHARE_DETAIL_TYPE_CODE")
    private ApprovalShareDetailType approvalShareDetailTypeCode;
}
