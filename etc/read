@Query("SELECT asrv FROM ApprovalShareReaderView asrv " +
            "JOIN ApprovalShare asr ON asrv.approvalShare.approvalShareId = asr.approvalShareId " +
            "JOIN ApprovalLine al ON asr.approvalLine.approvalLineId = al.approvalLineId " +
            "WHERE asr.useYn = 'Y' AND asrv.useYn = 'Y' AND al.useYn = 'Y' " +
            "AND al.approvalLineId = :approvalLineId ")
    List<ApprovalShareReaderView> findBpmApprovalShareReaderViewByApprovalLineId(@Param("approvalLineId") String approvalLineId);

이걸 jooq로 구현하면?


public class ApprovalLineOfDocumentRepositoryCustomImpl implements ApprovalLineOfDocumentRepositoryCustom {

    private final DSLContext dsl;
    @Override
    public List<ApprovalLineAndSendReceiveQueryOutJooqDto> findApprovalDetailList() {
        return dsl.select(
            ApprovalLine.APPROVAL_LINE.APPROVAL_LINE_ID ,
            ApprovalLine.APPROVAL_LINE.VERSION ,
            ApprovalLine.APPROVAL_LINE.PROCESS_ID ,
            ApprovalLine.APPROVAL_LINE.APPROVAL_LINE_TYPE_CODE,
            ApprovalLine.APPROVAL_LINE.APPROVAL_PROCESS_STATUS_CODE,
            ApprovalLine.APPROVAL_LINE.APPROVAL_DOCUMENT_STATUS_CODE,
            ApprovalLine.APPROVAL_LINE.CURRENT_APPROVER_ORDER_NO,
            ApprovalLine.APPROVAL_LINE.RECEIVE_DEPARTMENT_EXIST_YN,
            ApprovalLine.APPROVAL_LINE.GLOBAL_APPROVAL_YN,
            SendReceive.SEND_RECEIVE.SEND_RECEIVE_ID,
            SendReceive.SEND_RECEIVE.RECEIVE_COMPANY_CODE,
            SendReceive.SEND_RECEIVE.RECEIVE_COMPANY_NAME,
            SendReceive.SEND_RECEIVE.RECEIVE_COMPANY_NAME_EN,
            SendReceive.SEND_RECEIVE.RECEIVE_DEPARTMENT_CODE ,
            SendReceive.SEND_RECEIVE.RECEIVE_DEPARTMENT_NAME ,
            SendReceive.SEND_RECEIVE.RECEIVE_DEPARTMENT_NAME_EN ,
            SendReceive.SEND_RECEIVE.RECEIVE_DATETIME ,
            SendReceive.SEND_RECEIVE.REVIEW_COMPLETE_YN
                ).from(ApprovalLine.APPROVAL_LINE)
                    .leftJoin(SendReceive.SEND_RECEIVE)
                    .on(ApprovalLine.APPROVAL_LINE.RECEIVE_DEPARTMENT_EXIST_YN.eq("Y"))
                    .and(ApprovalLine.APPROVAL_LINE.APPROVAL_LINE_ID.eq(SendReceive.SEND_RECEIVE.SEND_APPROVAL_LINE_ID))
                    .and(SendReceive.SEND_RECEIVE.USE_YN.eq("Y"))
                .fetchInto(ApprovalLineAndSendReceiveQueryOutJooqDto.class);
    }
이런식으로


>>>>


return dsl.select()
                .from(ApprovalShareReaderView.APPROVAL_SHARE_READER_VIEW)
                .join(ApprovalShare.APPROVAL_SHARE).on(ApprovalShareReaderView.APPROVAL_SHARE_READER_VIEW.APPROVAL_SHARE_ID.eq(ApprovalShare.APPROVAL_SHARE.APPROVAL_SHARE_ID))
                .join(ApprovalLine.APPROVAL_LINE).on(ApprovalShare.APPROVAL_SHARE.APPROVAL_LINE_ID.eq(ApprovalLine.APPROVAL_LINE.APPROVAL_LINE_ID))
                .where(ApprovalShare.APPROVAL_SHARE.USE_YN.eq("Y")
                        .and(ApprovalShareReaderView.APPROVAL_SHARE_READER_VIEW.USE_YN.eq("Y"))
                        .and(ApprovalLine.APPROVAL_LINE.USE_YN.eq("Y"))
                        .and(ApprovalLine.APPROVAL_LINE.APPROVAL_LINE_ID.eq(approvalLineId)))
                .fetchInto(ApprovalShareReaderView.class);
