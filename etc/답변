private ItemProcessor<ictExecutionQueryOutDto, EmailMessage> processor() {
        return item -> {
            EmailMessage emailMessage = new EmailMessage();
            Person sender = new Person();
            sender.setName("System Admin");
            sender.setEmail("no-reply@example.com");

            Person receiver = new Person();
            receiver.setName(item.getSubmitterName());
            receiver.setNameEn(item.getSubmitterNameEn());
            receiver.setDeptName(item.getSubmitterDepartmentName());
            receiver.setDeptNameEn(item.getSubmitterDepartmentNameEn());
            receiver.setEmail(item.getSubmitterEmail());

            emailMessage.setSender(sender);
            emailMessage.setReceiverList(Collections.singletonList(receiver));
            emailMessage.setSubject("Your ICT Execution Report");
            emailMessage.setFormName("ICT Execution Form");
            emailMessage.setLinkUrl("http://example.com/details/" + item.getDocumentId());

            EmailBodyContext context = new EmailBodyContext();
            context.setKey("documentTitle");
            context.setValue(item.getDocumentTitle());

            emailMessage.setBodyContextList(Collections.singletonList(context));

            return emailMessage;
        };
    }

    private ItemWriter<EmailMessage> writer() {
        return items -> items.forEach(configurationClient::sendEmail);
    }


---


       return dsl.select(
                        WF_FORM_INSTANCE.DOC_NO,
                        WF_FORM_INSTANCE.SUBJECT,
                        WF_FORM_INSTANCE.SENDNAME,
                        WF_FORM_INSTANCE.SENDDEPT,
                        field("CONVERT(NVARCHAR(16), DATE_ADD({0}, INTERVAL 9 HOUR), 120)", String.class, WF_FORM_INSTANCE.INITIATED_DATE).as("CREATEDATE"),
                        WF_FORM_INSTANCE.PROCESS_INSTANCE_ID
                )
                .from(WF_FORM_INSTANCE)
                .where(WF_FORM_INSTANCE.FORM_PREFIX.eq("GWOK_WORKINGBUDGET_W01")
                        .and(WF_FORM_INSTANCE.STATUS_CODE.notIn("TEMPSAVE", "REJECT"))
                        .and(field("CONVERT(VARCHAR(10), DATE_ADD({0}, INTERVAL 9 HOUR), 121)", String.class, WF_FORM_INSTANCE.INITIATED_DATE)
                                .eq(field("CONVERT(VARCHAR(10), DATE_ADD(CURRENT_DATE, INTERVAL -1 DAY), 121)", String.class)))
                        .and(field("SUBSTRING({0}, LOCATE('<ICT_EXECUTION>', {0}) + 15, 1)", String.class, WF_FORM_INSTANCE.BODY_CONTEXT).eq("1"))
                )
                .orderBy(WF_FORM_INSTANCE.INITIATED_DATE.desc())
                .fetchInto(ictExecutionQueryOutDto.class);

----

SELECT 절
DOC_NO: 문서 번호를 선택합니다.
SUBJECT: 문서의 주제를 선택합니다.
SENDNAME: 송신자의 이름을 선택합니다.
SENDDEPT: 송신자의 부서를 선택합니다.
CONVERT(NVARCHAR(16), DATEADD(hh, 9, INITIATED_DATE), 120) AS CREATEDATE:
INITIATED_DATE에 9시간을 더한 후, 이를 NVARCHAR(16) 형식으로 변환하고, 이를 CREATEDATE라는 별칭으로 선택합니다.
PROCESS_INSTANCE_ID: 프로세스 인스턴스 ID를 선택합니다.
FROM 절
WF_FORM_INSTANCE: 데이터가 선택될 테이블입니다.
WHERE 절
FORM_PREFIX = 'GWOK_WORKINGBUDGET_W01': FORM_PREFIX가 'GWOK_WORKINGBUDGET_W01'인 행만 선택합니다.
STATUS_CODE NOT IN ('TEMPSAVE', 'REJECT'): STATUS_CODE가 'TEMPSAVE'나 'REJECT'가 아닌 행만 선택합니다.
CONVERT(VARCHAR(10), DATEADD(hh, 9, INITIATED_DATE), 121) = CONVERT(VARCHAR(10), DATEADD(DAY, -1, GETDATE()), 121):
INITIATED_DATE에 9시간을 더한 날짜가 현재 날짜의 전날과 같은 행만 선택합니다. 여기서 날짜 비교는 'YYYY-MM-DD' 형식으로 이루어집니다.
SUBSTRING(BODY_CONTEXT, CHARINDEX('<ICT_EXECUTION>', BODY_CONTEXT) + 15, 1) = '1':
BODY_CONTEXT 필드에서 '<ICT_EXECUTION>' 문자열의 위치를 찾아서, 그 위치에서 15자 뒤의 한 문자가 '1'인 행만 선택합니다.
