@Getter
@ToString
@AllArgsConstructor(access = AccessLevel.PRIVATE)
@Builder // @Setter 제거하고 @Builder 어노테이션 적용
@NoArgsConstructor(access = AccessLevel.PRIVATE)
public class ApprovalShareReaderQueryOutDto {
    private String approvalShareReaderViewId;
    private String approvalShareId;
    private int readerOrderNo;
    private YesNo readYn;
    private LocalDateTime shareDatetime;
    private LocalDateTime readDatetime;
    private ApprovalShareType approvalShareTypeCode;
    private String approvalShareTypeName;
    private ReaderType readerTypeCode;
    private String readerTypeName;
    private String readerId;
    private String readerName;
    private String readerUserId;
    private String readerUserName;
    private String readerDepartmentCode;
    private String readerDepartmentName;
    private String readerCompanyCode;
    private String readerCompanyName;
    private String readerDutyCode;
    private String readerDutyName;
    private String readerJobPositionCode;
    private String readerJobPositionName;
    private String readerRoleCode;
    private String readerRoleName;
    private ReadPhaseType readPhaseTypeCode;
    private String readPhaseTypeName;
    private YesNo displayYn;

    public void setNameEn(ApprovalShareReaderView approvalShareReaderView){
        if(!CommonUtils.isSameLocaleCompanyAndUser()){
            readerName = approvalShareReaderView.getReaderNameEn();
            readerUserName = approvalShareReaderView.getReaderUserNameEn();
            readerDepartmentName = approvalShareReaderView.getReaderDepartmentNameEn();
            readerCompanyName = approvalShareReaderView.getReaderCompanyNameEn();
            readerDutyName = approvalShareReaderView.getReaderDutyNameEn();
            readerJobPositionName = approvalShareReaderView.getReaderJobPositionNameEn();
            readerRoleName = approvalShareReaderView.getReaderRoleNameEn();
        }
    }
    public void setEnumName(Locale locale)  {
        approvalShareTypeName = approvalShareTypeCode.getName(locale);
        readerTypeName = readerTypeCode.getName(locale);
        readPhaseTypeName = readPhaseTypeCode.getName(locale);
    }
}

@Override
    public List<BpmReferenceUserQueryOutDto> findBpmReferenceUserList(BpmReferenceUserQueryInDto inDto) {
        List<ApprovalShareReaderView> list = approvalShareReaderViewRepository.findBpmApprovalShareReaderViewByApprovalLineId(inDto.getProcessInstanceId());

        return null;
    }

Entity인 ApprovalShareReaderView 리스트 안에 있는 값들을 꺼내서 List<BpmReferenceUserQueryOutDto> 형태로 return값을 반환해줘


>>

@Override
public List<BpmReferenceUserQueryOutDto> findBpmReferenceUserList(BpmReferenceUserQueryInDto inDto) {
    return approvalShareReaderViewRepository.findBpmApprovalShareReaderViewByApprovalLineId(inDto.getProcessInstanceId())
            .stream()
            .map(approvalShareReaderView -> BpmReferenceUserQueryOutDto.builder()
                    .approvalShareReaderViewId(approvalShareReaderView.getApprovalShareReaderViewId())
                    .approvalShareId(approvalShareReaderView.getApprovalShare().getApprovalShareId())
                    .readerOrderNo(approvalShareReaderView.getReaderOrderNo())
                    .readYn(approvalShareReaderView.getReadYn())
                    .shareDatetime(approvalShareReaderView.getShareDatetime())
                    .readDatetime(approvalShareReaderView.getReadDatetime())
                    .approvalShareTypeCode(approvalShareReaderView.getApprovalShareTypeCode())
                    .readerTypeCode(approvalShareReaderView.getReaderTypeCode())
                    .readerId(approvalShareReaderView.getReaderId())
                    .readerName(approvalShareReaderView.getReaderName())
                    .readerUserId(approvalShareReaderView.getReaderUserId())
                    .readerUserName(approvalShareReaderView.getReaderUserName())
                    .readerDepartmentCode(approvalShareReaderView.getReaderDepartmentCode())
                    .readerDepartmentName(approvalShareReaderView.getReaderDepartmentName())
                    .readerCompanyCode(approvalShareReaderView.getReaderCompanyCode())
                    .readerCompanyName(approvalShareReaderView.getReaderCompanyName())
                    .readerDutyCode(approvalShareReaderView.getReaderDutyCode())
                    .readerDutyName(approvalShareReaderView.getReaderDutyName())
                    .readerJobPositionCode(approvalShareReaderView.getReaderJobPositionCode())
                    .readerJobPositionName(approvalShareReaderView.getReaderJobPositionName())
                    .readerRoleCode(approvalShareReaderView.getReaderRoleCode())
                    .readerRoleName(approvalShareReaderView.getReaderRoleName())
                    .readPhaseTypeCode(approvalShareReaderView.getReadPhaseTypeCode())
                    .displayYn(approvalShareReaderView.getDisplayYn())
                    .build())
            .collect(Collectors.toList());
}
